{
    "name": "Processor Dev",
    "build": {
        "dockerfile": "Dockerfile",
        "context": "."
    },
    "customizations": {
        "vscode": {
            "settings": {
                "terminal.integrated.defaultProfile.linux": "bash",
                "editor.formatOnSave": true,
                "C_Cpp.clang_format_style": "file", // Use rocketlib clang-format
                "cmake.cmakePath": "/usr/bin/cmake"
            },
            "extensions": [
                "ms-vscode.cpptools",
                "ms-vscode.cpptools-extension-pack"
            ]
        }
    },
    "postStartCommand": {
        // Enable git tab-autocompletion in terminal
        "autocomplete": "echo \"source /usr/share/bash-completion/completions/git\" >> ~/.bashrc",
        // Avoid git unsafe repos warning caused by devcontainer ownership perms clash TODO: this shouldnt be necessary ???
        // Doing all the safe repos in one command stops it from erroring out becuase due to some reason it tries to run them concurrently if one takes too long then we run into a gitlock file issue. fix: do one long command with &&s
        "safeRepos": "git config --global --add safe.directory ${containerWorkspaceFolder} && git config --global --add safe.directory ${containerWorkspaceFolder}/src/third_party/canlib && git config --global --add safe.directory ${containerWorkspaceFolder}/src/third_party/rocketlib && git config --global --add safe.directory ${containerWorkspaceFolder}/tests/mocks/fff && git config --global --add safe.directory ${containerWorkspaceFolder}/tests/external/googletest && git config --global --add safe.directory /workspaces/cansw_processor_canards/src/third_party/CMSIS-DSP",
        // Init submodules after theyre all safe
        "submodules": "git submodule update --init --recursive",
        // Place .clang-format file in parent of the project folder so its detected by formatonsave
        "clang-format": "cp ${containerWorkspaceFolder}/src/third_party/rocketlib/.clang-format ${containerWorkspaceFolder}/../.clang-format",
        // Clean build folder temp fix for debugging
        "cleanBuild": "rm -rf ${containerWorkspaceFolder}/build"
    },
    // Mount proc folder into the container
    "mounts": [
        "source=.,target=/workspace,type=bind"
    ],
    // Default container-specific settings
    "remoteUser": "root" // Run container commands as root
}